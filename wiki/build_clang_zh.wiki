可以使用clang/llvm 3.1的正式版release或者从svn中取得代码。

llvm官方提供了一份指南，详细的说明了怎么从svn代码构建clang/llvm。

http://llvm.org/docs/GettingStarted.html#checkout

截止本文编写的时候，SVN r168581可以正常工作。

===1, 取回代码===
{{{
$cd where-you-want-llvm-to-live
$svn co http://llvm.org/svn/llvm-project/llvm/trunk llvm-svn -r 168581

$cd where-you-want-llvm-to-live
$cd llvm-svn/tools
$svn co http://llvm.org/svn/llvm-project/cfe/trunk clang -r 168581

$cd where-you-want-llvm-to-live
$cd llvm-svn/projects
$svn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt -r 168581
}}}

===2. 打上link arg补丁===

这个补丁修复了clang默认链接到crt1.3.1.o，缺少一个符号，需要再链接dylib1.o的问题，打上这个补丁，就不再需要手工在Makefile中加入LDFLAGS += -ldylib1.o了。

http://ios-toolchain-based-on-clang-for-linux.googlecode.com/files/clang-iphoneos-linker.patch

对clang/llvm 3.1版本，需要使用这个补丁：

http://ios-toolchain-based-on-clang-for-linux.googlecode.com/files/clang-iphoneos-linker-for-3.1.patch

{{{
$cd llvm-svn
$cat clang-iphoneos-linker.patch|patch -p1
}}}

===3. 配置安装===
{{{
$./configure --prefix=/usr  --enable-optimized
$make 
$make install
}}}